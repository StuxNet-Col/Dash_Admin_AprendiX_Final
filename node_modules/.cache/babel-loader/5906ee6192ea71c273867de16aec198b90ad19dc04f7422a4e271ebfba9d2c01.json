{"ast":null,"code":"// src/api.js\n\nconst API_URL = 'https://nodebackend-vv0e.onrender.com/api/v1';\n\n// Helper function to handle fetch requests\nconst fetchApi = async (url, options = {}) => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${API_URL}${url}`, {\n    ...options,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token ? `Bearer ${token}` : '',\n      ...options.headers\n    }\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'Error en la solicitud');\n  }\n  return response.json();\n};\n\n// Register Course function\nexport const registerCourse = async courseData => {\n  return fetchApi('/courses/registerCourse', {\n    method: 'POST',\n    body: JSON.stringify(courseData)\n  });\n};\nexport const login = async (email, password) => {\n  return fetchApi('/auth/login', {\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n};\nexport const register = async userData => {\n  return fetchApi('/auth/register', {\n    method: 'POST',\n    body: JSON.stringify(userData)\n  });\n};\nexport const fetchTests = async () => {\n  return fetchApi('/test', {\n    method: 'GET'\n  });\n};\nexport const fetchTestById = async testId => {\n  return fetchApi(`/test/find/${testId}`, {\n    method: 'GET'\n  });\n};\nexport const registerTest = async testData => {\n  return fetchApi('/test/registerTest', {\n    method: 'POST',\n    body: JSON.stringify(testData)\n  });\n};\nexport const registerQuestion = async questionData => {\n  return fetchApi('/test/registerQuestion', {\n    method: 'POST',\n    body: JSON.stringify(questionData)\n  });\n};\nexport const registerAnswer = async answerData => {\n  return fetchApi('/test/registerAnswerQuestion', {\n    method: 'POST',\n    body: JSON.stringify(answerData)\n  });\n};\nexport const fetchCourses = async () => {\n  return fetchApi('/courses', {\n    method: 'GET'\n  });\n};\nexport const fetchCourseById = async courseId => {\n  return fetchApi(`/courses/find/${courseId}`, {\n    method: 'GET'\n  });\n};\nexport const registerTopic = async topicData => {\n  return fetchApi('/courses/registerTopic', {\n    method: 'POST',\n    body: JSON.stringify(topicData)\n  });\n};\nexport const fetchUsers = async () => {\n  return fetchApi('/users', {\n    method: 'GET'\n  });\n};\nexport const fetchUserById = async userId => {\n  return fetchApi(`/users/find/${userId}`, {\n    method: 'GET'\n  });\n};","map":{"version":3,"names":["API_URL","fetchApi","url","options","token","localStorage","getItem","response","fetch","headers","ok","error","json","Error","message","registerCourse","courseData","method","body","JSON","stringify","login","email","password","register","userData","fetchTests","fetchTestById","testId","registerTest","testData","registerQuestion","questionData","registerAnswer","answerData","fetchCourses","fetchCourseById","courseId","registerTopic","topicData","fetchUsers","fetchUserById","userId"],"sources":["/home/stuxnet/1_Final_AprendiX _AdminDash/1_admin_aprendix/src/api.js"],"sourcesContent":["// src/api.js\n\nconst API_URL = 'https://nodebackend-vv0e.onrender.com/api/v1';\n\n// Helper function to handle fetch requests\nconst fetchApi = async (url, options = {}) => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${API_URL}${url}`, {\n    ...options,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token ? `Bearer ${token}` : '',\n      ...options.headers,\n    },\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'Error en la solicitud');\n  }\n\n  return response.json();\n};\n\n// Register Course function\nexport const registerCourse = async (courseData) => {\n  return fetchApi('/courses/registerCourse', {\n    method: 'POST',\n    body: JSON.stringify(courseData),\n  });\n};\n\nexport const login = async (email, password) => {\n  return fetchApi('/auth/login', {\n    method: 'POST',\n    body: JSON.stringify({ email, password }),\n  });\n};\n\nexport const register = async (userData) => {\n  return fetchApi('/auth/register', {\n    method: 'POST',\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const fetchTests = async () => {\n  return fetchApi('/test', { method: 'GET' });\n};\n\nexport const fetchTestById = async (testId) => {\n  return fetchApi(`/test/find/${testId}`, { method: 'GET' });\n};\n\nexport const registerTest = async (testData) => {\n  return fetchApi('/test/registerTest', {\n    method: 'POST',\n    body: JSON.stringify(testData),\n  });\n};\n\nexport const registerQuestion = async (questionData) => {\n  return fetchApi('/test/registerQuestion', {\n    method: 'POST',\n    body: JSON.stringify(questionData),\n  });\n};\n\nexport const registerAnswer = async (answerData) => {\n  return fetchApi('/test/registerAnswerQuestion', {\n    method: 'POST',\n    body: JSON.stringify(answerData),\n  });\n};\n\nexport const fetchCourses = async () => {\n  return fetchApi('/courses', { method: 'GET' });\n};\n\nexport const fetchCourseById = async (courseId) => {\n  return fetchApi(`/courses/find/${courseId}`, { method: 'GET' });\n};\n\nexport const registerTopic = async (topicData) => {\n  return fetchApi('/courses/registerTopic', {\n    method: 'POST',\n    body: JSON.stringify(topicData),\n  });\n};\n\nexport const fetchUsers = async () => {\n  return fetchApi('/users', { method: 'GET' });\n};\n\nexport const fetchUserById = async (userId) => {\n  return fetchApi(`/users/find/${userId}`, { method: 'GET' });\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAG,8CAA8C;;AAE9D;AACA,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC5C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,OAAO,GAAGE,GAAG,EAAE,EAAE;IAC/C,GAAGC,OAAO;IACVM,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAEL,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAG,EAAE;MAC/C,GAAGD,OAAO,CAACM;IACb;EACF,CAAC,CAAC;EAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACG,OAAO,IAAI,uBAAuB,CAAC;EAC3D;EAEA,OAAOP,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMG,cAAc,GAAG,MAAOC,UAAU,IAAK;EAClD,OAAOf,QAAQ,CAAC,yBAAyB,EAAE;IACzCgB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU;EACjC,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMK,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC9C,OAAOtB,QAAQ,CAAC,aAAa,EAAE;IAC7BgB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEE,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,OAAOxB,QAAQ,CAAC,gBAAgB,EAAE;IAChCgB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACK,QAAQ;EAC/B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,OAAOzB,QAAQ,CAAC,OAAO,EAAE;IAAEgB,MAAM,EAAE;EAAM,CAAC,CAAC;AAC7C,CAAC;AAED,OAAO,MAAMU,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,OAAO3B,QAAQ,CAAC,cAAc2B,MAAM,EAAE,EAAE;IAAEX,MAAM,EAAE;EAAM,CAAC,CAAC;AAC5D,CAAC;AAED,OAAO,MAAMY,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,OAAO7B,QAAQ,CAAC,oBAAoB,EAAE;IACpCgB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACU,QAAQ;EAC/B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,YAAY,IAAK;EACtD,OAAO/B,QAAQ,CAAC,wBAAwB,EAAE;IACxCgB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACY,YAAY;EACnC,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOC,UAAU,IAAK;EAClD,OAAOjC,QAAQ,CAAC,8BAA8B,EAAE;IAC9CgB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACc,UAAU;EACjC,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,OAAOlC,QAAQ,CAAC,UAAU,EAAE;IAAEgB,MAAM,EAAE;EAAM,CAAC,CAAC;AAChD,CAAC;AAED,OAAO,MAAMmB,eAAe,GAAG,MAAOC,QAAQ,IAAK;EACjD,OAAOpC,QAAQ,CAAC,iBAAiBoC,QAAQ,EAAE,EAAE;IAAEpB,MAAM,EAAE;EAAM,CAAC,CAAC;AACjE,CAAC;AAED,OAAO,MAAMqB,aAAa,GAAG,MAAOC,SAAS,IAAK;EAChD,OAAOtC,QAAQ,CAAC,wBAAwB,EAAE;IACxCgB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACmB,SAAS;EAChC,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,OAAOvC,QAAQ,CAAC,QAAQ,EAAE;IAAEgB,MAAM,EAAE;EAAM,CAAC,CAAC;AAC9C,CAAC;AAED,OAAO,MAAMwB,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,OAAOzC,QAAQ,CAAC,eAAeyC,MAAM,EAAE,EAAE;IAAEzB,MAAM,EAAE;EAAM,CAAC,CAAC;AAC7D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}