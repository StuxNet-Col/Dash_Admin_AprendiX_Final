{"ast":null,"code":"// src/api.js\nconst API_URL = 'http://your-api-url.com';\nexport const registerCourse = async courseData => {\n  const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NTRiMjMyZDRmOGMxODgxMGU3OTMyOCIsImlhdCI6MTcxODE2MTQzMSwiZXhwIjoxNzE4MjQ3ODMxfQ.7--dVUCUDbRNTJ9PmQm45HEDRuXBDcBQy0mNqeSxI0c';\n  try {\n    const response = await fetch(`${API_URL}/courses`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': token\n      },\n      body: JSON.stringify(courseData)\n    });\n    if (!response.ok) {\n      throw new Error('Error en la solicitud a la API');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const login = async (email, password) => {\n  return fetchApi('/auth/login', {\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n};\nexport const register = async userData => {\n  return fetchApi('/auth/register', {\n    method: 'POST',\n    body: JSON.stringify(userData)\n  });\n};\nexport const fetchTests = async () => {\n  return fetchApi('/test', {\n    method: 'GET'\n  });\n};\nexport const fetchTestById = async testId => {\n  return fetchApi(`/test/find/${testId}`, {\n    method: 'GET'\n  });\n};\nexport const registerTest = async testData => {\n  return fetchApi('/test/registerTest', {\n    method: 'POST',\n    body: JSON.stringify(testData)\n  });\n};\nexport const registerQuestion = async questionData => {\n  return fetchApi('/test/registerQuestion', {\n    method: 'POST',\n    body: JSON.stringify(questionData)\n  });\n};\nexport const registerAnswer = async answerData => {\n  return fetchApi('/test/registerAnswerQuestion', {\n    method: 'POST',\n    body: JSON.stringify(answerData)\n  });\n};\nexport const fetchCourses = async () => {\n  return fetchApi('/courses', {\n    method: 'GET'\n  });\n};\nexport const fetchCourseById = async courseId => {\n  return fetchApi(`/courses/find/${courseId}`, {\n    method: 'GET'\n  });\n};\nexport const registerTopic = async topicData => {\n  return fetchApi('/courses/registerTopic', {\n    method: 'POST',\n    body: JSON.stringify(topicData)\n  });\n};\nexport const fetchUsers = async () => {\n  return fetchApi('/users', {\n    method: 'GET'\n  });\n};\nexport const fetchUserById = async userId => {\n  return fetchApi(`/users/find/${userId}`, {\n    method: 'GET'\n  });\n};","map":{"version":3,"names":["API_URL","registerCourse","courseData","token","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","login","email","password","fetchApi","register","userData","fetchTests","fetchTestById","testId","registerTest","testData","registerQuestion","questionData","registerAnswer","answerData","fetchCourses","fetchCourseById","courseId","registerTopic","topicData","fetchUsers","fetchUserById","userId"],"sources":["/home/stuxnet/1_Final_AprendiX _AdminDash/1_admin_aprendix/src/api.js"],"sourcesContent":["// src/api.js\nconst API_URL = 'http://your-api-url.com';\n\nexport const registerCourse = async (courseData) => {\n  const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NTRiMjMyZDRmOGMxODgxMGU3OTMyOCIsImlhdCI6MTcxODE2MTQzMSwiZXhwIjoxNzE4MjQ3ODMxfQ.7--dVUCUDbRNTJ9PmQm45HEDRuXBDcBQy0mNqeSxI0c';\n  try {\n    const response = await fetch(`${API_URL}/courses`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': token,\n      },\n      body: JSON.stringify(courseData),\n    });\n\n    if (!response.ok) {\n      throw new Error('Error en la solicitud a la API');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const login = async (email, password) => {\n  return fetchApi('/auth/login', {\n    method: 'POST',\n    body: JSON.stringify({ email, password }),\n  });\n};\n\nexport const register = async (userData) => {\n  return fetchApi('/auth/register', {\n    method: 'POST',\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const fetchTests = async () => {\n  return fetchApi('/test', { method: 'GET' });\n};\n\nexport const fetchTestById = async (testId) => {\n  return fetchApi(`/test/find/${testId}`, { method: 'GET' });\n};\n\nexport const registerTest = async (testData) => {\n  return fetchApi('/test/registerTest', {\n    method: 'POST',\n    body: JSON.stringify(testData),\n  });\n};\n\nexport const registerQuestion = async (questionData) => {\n  return fetchApi('/test/registerQuestion', {\n    method: 'POST',\n    body: JSON.stringify(questionData),\n  });\n};\n\nexport const registerAnswer = async (answerData) => {\n  return fetchApi('/test/registerAnswerQuestion', {\n    method: 'POST',\n    body: JSON.stringify(answerData),\n  });\n};\n\nexport const fetchCourses = async () => {\n  return fetchApi('/courses', { method: 'GET' });\n};\n\nexport const fetchCourseById = async (courseId) => {\n  return fetchApi(`/courses/find/${courseId}`, { method: 'GET' });\n};\n\nexport const registerTopic = async (topicData) => {\n  return fetchApi('/courses/registerTopic', {\n    method: 'POST',\n    body: JSON.stringify(topicData),\n  });\n};\n\nexport const fetchUsers = async () => {\n  return fetchApi('/users', { method: 'GET' });\n};\n\nexport const fetchUserById = async (userId) => {\n  return fetchApi(`/users/find/${userId}`, { method: 'GET' });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}