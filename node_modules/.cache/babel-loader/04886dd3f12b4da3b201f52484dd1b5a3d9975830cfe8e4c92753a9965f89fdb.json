{"ast":null,"code":"// src/api.js\nconst fetchApi = 'https://nodebackend-vv0e.onrender.com/api/v1/';\nexport const registerCourse = async courseData => {\n  const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NTRiMjMyZDRmOGMxODgxMGU3OTMyOCIsImlhdCI6MTcxODE2MTQzMSwiZXhwIjoxNzE4MjQ3ODMxfQ.7--dVUCUDbRNTJ9PmQm45HEDRuXBDcBQy0mNqeSxI0c';\n  try {\n    const response = await fetch(`${fetchApi}courses/registercourse`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': token\n      },\n      body: JSON.stringify(courseData)\n    });\n    if (!response.ok) {\n      throw new Error('Error en la solicitud a la API');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const login = async (email, password) => {\n  return fetchApi('/auth/login', {\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n};\nexport const register = async userData => {\n  return fetchApi('/auth/register', {\n    method: 'POST',\n    body: JSON.stringify(userData)\n  });\n};\nexport const fetchTests = async () => {\n  return fetchApi('/test', {\n    method: 'GET'\n  });\n};\nexport const fetchTestById = async testId => {\n  return fetchApi(`/test/find/${testId}`, {\n    method: 'GET'\n  });\n};\nexport const registerTest = async testData => {\n  return fetchApi('/test/registerTest', {\n    method: 'POST',\n    body: JSON.stringify(testData)\n  });\n};\nexport const registerQuestion = async questionData => {\n  return fetchApi('/test/registerQuestion', {\n    method: 'POST',\n    body: JSON.stringify(questionData)\n  });\n};\nexport const registerAnswer = async answerData => {\n  return fetchApi('/test/registerAnswerQuestion', {\n    method: 'POST',\n    body: JSON.stringify(answerData)\n  });\n};\nexport const fetchCourses = async () => {\n  return fetchApi('/courses', {\n    method: 'GET'\n  });\n};\nexport const fetchCourseById = async courseId => {\n  return fetchApi(`/courses/find/${courseId}`, {\n    method: 'GET'\n  });\n};\nexport const registerTopic = async topicData => {\n  return fetchApi('/courses/registerTopic', {\n    method: 'POST',\n    body: JSON.stringify(topicData)\n  });\n};\nexport const fetchUsers = async () => {\n  return fetchApi('/users', {\n    method: 'GET'\n  });\n};\nexport const fetchUserById = async userId => {\n  return fetchApi(`/users/find/${userId}`, {\n    method: 'GET'\n  });\n};","map":{"version":3,"names":["fetchApi","registerCourse","courseData","token","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","login","email","password","register","userData","fetchTests","fetchTestById","testId","registerTest","testData","registerQuestion","questionData","registerAnswer","answerData","fetchCourses","fetchCourseById","courseId","registerTopic","topicData","fetchUsers","fetchUserById","userId"],"sources":["/home/stuxnet/1_Final_AprendiX _AdminDash/1_admin_aprendix/src/api.js"],"sourcesContent":["// src/api.js\nconst fetchApi = 'https://nodebackend-vv0e.onrender.com/api/v1/';\n\nexport const registerCourse = async (courseData) => {\n  const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NTRiMjMyZDRmOGMxODgxMGU3OTMyOCIsImlhdCI6MTcxODE2MTQzMSwiZXhwIjoxNzE4MjQ3ODMxfQ.7--dVUCUDbRNTJ9PmQm45HEDRuXBDcBQy0mNqeSxI0c';\n  try {\n    const response = await fetch(`${fetchApi}courses/registercourse`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': token,\n      },\n      body: JSON.stringify(courseData),\n    });\n\n    if (!response.ok) {\n      throw new Error('Error en la solicitud a la API');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const login = async (email, password) => {\n  return fetchApi('/auth/login', {\n    method: 'POST',\n    body: JSON.stringify({ email, password }),\n  });\n};\n\nexport const register = async (userData) => {\n  return fetchApi('/auth/register', {\n    method: 'POST',\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const fetchTests = async () => {\n  return fetchApi('/test', { method: 'GET' });\n};\n\nexport const fetchTestById = async (testId) => {\n  return fetchApi(`/test/find/${testId}`, { method: 'GET' });\n};\n\nexport const registerTest = async (testData) => {\n  return fetchApi('/test/registerTest', {\n    method: 'POST',\n    body: JSON.stringify(testData),\n  });\n};\n\nexport const registerQuestion = async (questionData) => {\n  return fetchApi('/test/registerQuestion', {\n    method: 'POST',\n    body: JSON.stringify(questionData),\n  });\n};\n\nexport const registerAnswer = async (answerData) => {\n  return fetchApi('/test/registerAnswerQuestion', {\n    method: 'POST',\n    body: JSON.stringify(answerData),\n  });\n};\n\nexport const fetchCourses = async () => {\n  return fetchApi('/courses', { method: 'GET' });\n};\n\nexport const fetchCourseById = async (courseId) => {\n  return fetchApi(`/courses/find/${courseId}`, { method: 'GET' });\n};\n\nexport const registerTopic = async (topicData) => {\n  return fetchApi('/courses/registerTopic', {\n    method: 'POST',\n    body: JSON.stringify(topicData),\n  });\n};\n\nexport const fetchUsers = async () => {\n  return fetchApi('/users', { method: 'GET' });\n};\n\nexport const fetchUserById = async (userId) => {\n  return fetchApi(`/users/find/${userId}`, { method: 'GET' });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}